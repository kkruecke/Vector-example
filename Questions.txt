1. What does map::emplace_hint() buy you, if anything, in terms of better efficiency over map::insert() or map::emplace()
2. What exactly does map::emplace do better than than map::insert doesn't?
3. How does map::emplace_xxxx() differ in intend from vector::emplace() or stack::emplace().


See:
http://stackoverflow.com/questions/17172080/insert-vs-emplace-vs-operator-in-c-map

Thought:
emplace() calls std::forward, which forward arguments. Is the efficiency gain in _where_ the object is created and the fact that arguments are forward and not
copied or moved when creating it?
